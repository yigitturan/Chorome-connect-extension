{"ast":null,"code":"import _asyncToGenerator from \"/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { collection, query, onSnapshot, orderBy, addDoc, Timestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport * as i0 from \"@angular/core\";\nfunction ChatScreenComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 2, message_r2.createdAt.toDate(), \"short\"));\n  }\n}\nfunction ChatScreenComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, ChatScreenComponent_div_1_div_1_Template, 6, 5, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.messages);\n  }\n}\nfunction ChatScreenComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading messages...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ChatScreenComponent {\n  constructor() {\n    this.messages = [];\n    this.newMessage = '';\n    this.isLoading = true;\n    this.fetchMessages();\n  }\n  fetchMessages() {\n    const messagesQuery = query(collection(db, 'messages'), orderBy('createdAt', 'desc'));\n    onSnapshot(messagesQuery, snapshot => {\n      this.messages = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.isLoading = false;\n    }, error => {\n      console.error('Error fetching messages:', error);\n      this.isLoading = false;\n    });\n  }\n  sendMessage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const messageText = _this.newMessage.trim();\n      if (!messageText) return;\n      try {\n        yield addDoc(collection(db, 'messages'), {\n          text: messageText,\n          createdAt: Timestamp.fromDate(new Date())\n        });\n        _this.newMessage = '';\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function ChatScreenComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChatScreenComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatScreenComponent,\n      selectors: [[\"app-chat-screen\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 3,\n      consts: [[\"loadingTemplate\", \"\"], [1, \"chat-container\"], [\"class\", \"messages\", 4, \"ngIf\", \"ngIfElse\"], [1, \"input-container\"], [\"type\", \"text\", \"placeholder\", \"Type a message...\", 3, \"ngModelChange\", \"keyup.enter\", \"ngModel\"], [3, \"click\"], [1, \"messages\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"message\"]],\n      template: function ChatScreenComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵtemplate(1, ChatScreenComponent_div_1_Template, 2, 1, \"div\", 2)(2, ChatScreenComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatScreenComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage, $event) || (ctx.newMessage = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"keyup.enter\", function ChatScreenComponent_Template_input_keyup_enter_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChatScreenComponent_Template_button_click_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵtext(7, \"Send\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const loadingTemplate_r4 = i0.ɵɵreference(3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading)(\"ngIfElse\", loadingTemplate_r4);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage);\n        }\n      },\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n}\\n.chat-container[_ngcontent-%COMP%]   .messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  list-style: none;\\n  padding: 0;\\n}\\n.chat-container[_ngcontent-%COMP%]   .messages[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  margin: 10px 0;\\n  padding: 8px;\\n  background-color: #f4f4f4;\\n  border-radius: 4px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 10px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 8px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  margin-left: 10px;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FuZ3VsYXIvc3JjL2FwcC9tb2R1bGVzL3NpZGUtcGFuZWwvY2hhdC1zZXJ2aWNlL2NoYXQtc2NyZWVuLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksT0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNKO0FBQ0k7RUFDRSxPQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFVBQUE7QUFDTjtBQUNNO0VBQ0UsY0FBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBQ1I7QUFHSTtFQUNFLGFBQUE7RUFDQSxhQUFBO0FBRE47QUFHTTtFQUNFLE9BQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQURSO0FBSU07RUFDRSxhQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBRlI7QUFJUTtFQUNFLHlCQUFBO0FBRlYiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdC1jb250YWluZXIge1xuICAgIGZsZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBcbiAgICAubWVzc2FnZXMge1xuICAgICAgZmxleDogMTtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgcGFkZGluZzogMDtcbiAgXG4gICAgICBsaSB7XG4gICAgICAgIG1hcmdpbjogMTBweCAwO1xuICAgICAgICBwYWRkaW5nOiA4cHg7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIH1cbiAgICB9XG4gIFxuICAgIC5pbnB1dC1jb250YWluZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHBhZGRpbmc6IDEwcHg7XG4gIFxuICAgICAgaW5wdXQge1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBwYWRkaW5nOiA4cHg7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIH1cbiAgXG4gICAgICBidXR0b24ge1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["collection","query","onSnapshot","orderBy","addDoc","Timestamp","db","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","message_r2","text","ɵɵpipeBind2","createdAt","toDate","ɵɵtemplate","ChatScreenComponent_div_1_div_1_Template","ɵɵproperty","ctx_r2","messages","ChatScreenComponent","constructor","newMessage","isLoading","fetchMessages","messagesQuery","snapshot","docs","map","doc","id","data","error","console","sendMessage","_this","_asyncToGenerator","messageText","trim","fromDate","Date","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ChatScreenComponent_Template","rf","ctx","ChatScreenComponent_div_1_Template","ChatScreenComponent_ng_template_2_Template","ɵɵtemplateRefExtractor","ɵɵtwoWayListener","ChatScreenComponent_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ChatScreenComponent_Template_input_keyup_enter_5_listener","ChatScreenComponent_Template_button_click_6_listener","loadingTemplate_r4","ɵɵtwoWayProperty"],"sources":["/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/angular/src/app/modules/side-panel/chat-service/chat-screen.component.ts","/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/angular/src/app/modules/side-panel/chat-service/chat-screen.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { collection, query, onSnapshot, orderBy, addDoc, Timestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\n\ninterface Message {\n  id?: string;\n  text: string;\n  createdAt: Timestamp;\n}\n\n@Component({\n  selector: 'app-chat-screen',\n  standalone: true,\n  templateUrl: './chat-screen.component.html',\n  styleUrls: ['./chat-screen.component.scss'],\n})\nexport class ChatScreenComponent {\n  messages: Message[] = [];\n  newMessage = '';\n  isLoading = true;\n\n  constructor() {\n    this.fetchMessages();\n  }\n\n  fetchMessages() {\n    const messagesQuery = query(collection(db, 'messages'), orderBy('createdAt', 'desc'));\n\n    onSnapshot(\n      messagesQuery,\n      (snapshot) => {\n        this.messages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        })) as Message[];\n        this.isLoading = false;\n      },\n      (error) => {\n        console.error('Error fetching messages:', error);\n        this.isLoading = false;\n      }\n    );\n  }\n\n  async sendMessage() {\n    const messageText = this.newMessage.trim();\n    if (!messageText) return;\n\n    try {\n      await addDoc(collection(db, 'messages'), {\n        text: messageText,\n        createdAt: Timestamp.fromDate(new Date()),\n      });\n      this.newMessage = '';\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }\n}\n","<div class=\"chat-container\">\n    <div class=\"messages\" *ngIf=\"!isLoading; else loadingTemplate\">\n      <div *ngFor=\"let message of messages\" class=\"message\">\n        <p>{{ message.text }}</p>\n        <span>{{ message.createdAt.toDate() | date: 'short' }}</span>\n      </div>\n    </div>\n  \n    <ng-template #loadingTemplate>\n      <p>Loading messages...</p>\n    </ng-template>\n  \n    <div class=\"input-container\">\n      <input\n        type=\"text\"\n        [(ngModel)]=\"newMessage\"\n        placeholder=\"Type a message...\"\n        (keyup.enter)=\"sendMessage()\"\n      />\n      <button (click)=\"sendMessage()\">Send</button>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}