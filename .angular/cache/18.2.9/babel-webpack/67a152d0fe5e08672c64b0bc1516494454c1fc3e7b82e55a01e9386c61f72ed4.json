{"ast":null,"code":"import { InjectionToken, provideExperimentalZonelessChangeDetection } from '@angular/core';\nimport { provideRouter, withHashLocation } from '@angular/router';\nimport { routes } from './app.routes';\nexport const TAB_ID = new InjectionToken('CHROME_TAB_ID');\nexport const appConfig = tabId => {\n  return {\n    providers: [{\n      provide: TAB_ID,\n      useValue: tabId\n    }, provideExperimentalZonelessChangeDetection(), provideRouter(routes, withHashLocation())]\n  };\n};","map":{"version":3,"names":["InjectionToken","provideExperimentalZonelessChangeDetection","provideRouter","withHashLocation","routes","TAB_ID","appConfig","tabId","providers","provide","useValue"],"sources":["/Users/enginturan/Desktop/git/Chorome-connect-extension/angular/src/app/app.config.ts"],"sourcesContent":["import { ApplicationConfig, InjectionToken, provideExperimentalZonelessChangeDetection } from '@angular/core'\nimport { provideRouter, withHashLocation } from '@angular/router'\n\nimport { routes } from './app.routes'\n\nexport const TAB_ID = new InjectionToken<number>('CHROME_TAB_ID')\n\nexport const appConfig = (tabId: number): ApplicationConfig => {\n  return {\n    providers: [\n      { provide: TAB_ID, useValue: tabId },\n      provideExperimentalZonelessChangeDetection(),\n      provideRouter(routes, withHashLocation())\n    ]\n  }\n}\n"],"mappings":"AAAA,SAA4BA,cAAc,EAAEC,0CAA0C,QAAQ,eAAe;AAC7G,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,iBAAiB;AAEjE,SAASC,MAAM,QAAQ,cAAc;AAErC,OAAO,MAAMC,MAAM,GAAG,IAAIL,cAAc,CAAS,eAAe,CAAC;AAEjE,OAAO,MAAMM,SAAS,GAAIC,KAAa,IAAuB;EAC5D,OAAO;IACLC,SAAS,EAAE,CACT;MAAEC,OAAO,EAAEJ,MAAM;MAAEK,QAAQ,EAAEH;IAAK,CAAE,EACpCN,0CAA0C,EAAE,EAC5CC,aAAa,CAACE,MAAM,EAAED,gBAAgB,EAAE,CAAC;GAE5C;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}