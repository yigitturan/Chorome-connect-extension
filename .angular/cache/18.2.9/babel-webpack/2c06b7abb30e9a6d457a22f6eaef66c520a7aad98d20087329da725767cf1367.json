{"ast":null,"code":"import _asyncToGenerator from \"/Users/enginturan/Desktop/git/Chorome-connect-extension/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { getAuth, onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, connectAuthEmulator } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { environment } from '../../enviroment';\nlet AuthenticationComponent = class AuthenticationComponent {\n  constructor() {\n    this.auth = inject(getAuth(initializeApp(environment.firebaseConfig))); // Dependency Injection for Auth\n    this.email = '';\n    this.password = '';\n    this.message = '';\n    this.user = null;\n  }\n  ngOnInit() {\n    this.monitorAuthState();\n    connectAuthEmulator(this.auth, 'http://localhost:9099');\n  }\n  // Login with email and password\n  loginEmailPassword() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const userCredential = yield signInWithEmailAndPassword(_this.auth, _this.email, _this.password);\n        console.log('Logged in:', userCredential.user);\n        _this.message = `Welcome, ${userCredential.user.email}!`;\n      } catch (error) {\n        console.error('Login Error:', error.message);\n        _this.message = `Login Error: ${error.message}`;\n      }\n    })();\n  }\n  // Create new account with email and password\n  createAccount() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const userCredential = yield createUserWithEmailAndPassword(_this2.auth, _this2.email, _this2.password);\n        console.log('Account created:', userCredential.user);\n        _this2.message = `Account created for ${userCredential.user.email}!`;\n      } catch (error) {\n        console.error('Sign-Up Error:', error.message);\n        _this2.message = `Sign-Up Error: ${error.message}`;\n      }\n    })();\n  }\n  // Monitor authentication state\n  monitorAuthState() {\n    onAuthStateChanged(this.auth, user => {\n      if (user) {\n        this.user = user;\n        this.message = `Welcome, ${user.email || 'User'}!`;\n      } else {\n        this.user = null;\n        this.message = 'You are not logged in.';\n      }\n    });\n  }\n  // Log out\n  logout() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield signOut(_this3.auth);\n        console.log('User signed out');\n        _this3.user = null;\n        _this3.message = 'Signed out successfully.';\n      } catch (error) {\n        console.error('Sign-Out Error:', error.message);\n        _this3.message = `Sign-Out Error: ${error.message}`;\n      }\n    })();\n  }\n};\nAuthenticationComponent = __decorate([Component({\n  selector: 'app-authentication',\n  standalone: true,\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})], AuthenticationComponent);\nexport { AuthenticationComponent };","map":{"version":3,"names":["Component","inject","getAuth","onAuthStateChanged","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","connectAuthEmulator","initializeApp","environment","AuthenticationComponent","constructor","auth","firebaseConfig","email","password","message","user","ngOnInit","monitorAuthState","loginEmailPassword","_this","_asyncToGenerator","userCredential","console","log","error","createAccount","_this2","logout","_this3","__decorate","selector","standalone","templateUrl","styleUrls"],"sources":["/Users/enginturan/Desktop/git/Chorome-connect-extension/angular/src/app/modules/side-panel/components/authentication/authentication.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { getAuth, onAuthStateChanged, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, connectAuthEmulator } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { environment } from '../../enviroment';\n\n@Component({\n  selector: 'app-authentication',\n  standalone: true,\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss'],\n})\nexport class AuthenticationComponent implements OnInit {\n  private auth = inject(getAuth(initializeApp(environment.firebaseConfig))); // Dependency Injection for Auth\n  email: string = '';\n  password: string = '';\n  message: string = '';\n  user: any = null;\n\n  ngOnInit() {\n    this.monitorAuthState();\n    connectAuthEmulator(this.auth, 'http://localhost:9099');\n  }\n\n  // Login with email and password\n  async loginEmailPassword() {\n    try {\n      const userCredential = await signInWithEmailAndPassword(this.auth, this.email, this.password);\n      console.log('Logged in:', userCredential.user);\n      this.message = `Welcome, ${userCredential.user.email}!`;\n    } catch (error: any) {\n      console.error('Login Error:', error.message);\n      this.message = `Login Error: ${error.message}`;\n    }\n  }\n\n  // Create new account with email and password\n  async createAccount() {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(this.auth, this.email, this.password);\n      console.log('Account created:', userCredential.user);\n      this.message = `Account created for ${userCredential.user.email}!`;\n    } catch (error: any) {\n      console.error('Sign-Up Error:', error.message);\n      this.message = `Sign-Up Error: ${error.message}`;\n    }\n  }\n\n  // Monitor authentication state\n  monitorAuthState() {\n    onAuthStateChanged(this.auth, (user) => {\n      if (user) {\n        this.user = user;\n        this.message = `Welcome, ${user.email || 'User'}!`;\n      } else {\n        this.user = null;\n        this.message = 'You are not logged in.';\n      }\n    });\n  }\n\n  // Log out\n  async logout() {\n    try {\n      await signOut(this.auth);\n      console.log('User signed out');\n      this.user = null;\n      this.message = 'Signed out successfully.';\n    } catch (error: any) {\n      console.error('Sign-Out Error:', error.message);\n      this.message = `Sign-Out Error: ${error.message}`;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}