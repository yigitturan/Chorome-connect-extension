{"ast":null,"code":"import _asyncToGenerator from \"/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { getAuth, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\nimport { environment } from '../../enviroment';\nlet AuthenticationComponent = class AuthenticationComponent {\n  constructor() {\n    this.auth = getAuth(initializeApp(environment.firebaseConfig));\n    this.email = '';\n    this.password = '';\n    this.message = '';\n    this.user = null;\n    this.users = [];\n    this.chatMessage = '';\n    this.messages = [];\n    this.selectedUser = null;\n  }\n  ngOnInit() {\n    this.monitorAuthState();\n    this.fetchUsers();\n  }\n  createAccount() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const userCredential = yield createUserWithEmailAndPassword(_this.auth, _this.email, _this.password);\n        _this.user = userCredential.user;\n        // Save user data to Firebase\n        const db = getDatabase();\n        yield set(ref(db, `users/${_this.user.uid}`), {\n          email: _this.user.email,\n          uid: _this.user.uid\n        });\n        console.log(`User saved: ${_this.user.email}`); // Debugging log\n        _this.message = `Account created for ${_this.user.email}!`;\n      } catch (error) {\n        console.error('Sign-Up Error:', error.message);\n        _this.message = `Sign-Up Error: ${error.message}`;\n      }\n    })();\n  }\n  loginEmailPassword() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const userCredential = yield signInWithEmailAndPassword(_this2.auth, _this2.email, _this2.password);\n        _this2.user = userCredential.user;\n        _this2.message = `Welcome, ${_this2.user.email}!`;\n      } catch (error) {\n        console.error('Login Error:', error.message);\n        _this2.message = `Login Error: ${error.message}`;\n      }\n    })();\n  }\n  logout() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield signOut(_this3.auth);\n        _this3.user = null;\n        _this3.message = 'Signed out successfully.';\n      } catch (error) {\n        console.error('Sign-Out Error:', error.message);\n        _this3.message = `Sign-Out Error: ${error.message}`;\n      }\n    })();\n  }\n  monitorAuthState() {\n    onAuthStateChanged(this.auth, user => {\n      if (user) {\n        this.user = user;\n        this.message = `Welcome, ${user.email || 'User'}!`;\n      } else {\n        this.user = null;\n        this.message = 'You are not logged in.';\n      }\n    });\n  }\n  fetchUsers() {\n    const db = getDatabase();\n    const usersRef = ref(db, 'users');\n    onValue(usersRef, snapshot => {\n      const data = snapshot.val();\n      console.log('Fetched users:', data); // Debugging log\n      if (data) {\n        this.users = Object.values(data).filter(user => user.uid !== this.user?.uid);\n      } else {\n        this.users = [];\n        console.log('No users found in Firebase.');\n      }\n    });\n  }\n  selectUser(userId) {\n    this.selectedUser = this.users.find(user => user.uid === userId);\n    this.fetchMessages(userId);\n  }\n  sendMessage(receiverId, message) {\n    if (!message.trim()) return;\n    const db = getDatabase();\n    const chatRef = ref(db, `chats/${this.user.uid}_${receiverId}`);\n    set(chatRef, {\n      sender: this.user.uid,\n      receiver: receiverId,\n      message,\n      timestamp: Date.now()\n    });\n    this.chatMessage = ''; // Clear the message input\n  }\n  fetchMessages(receiverId) {\n    const db = getDatabase();\n    const chatRef = ref(db, `chats/${this.user.uid}_${receiverId}`);\n    onValue(chatRef, snapshot => {\n      const data = snapshot.val();\n      this.messages = data ? Object.values(data) : [];\n    });\n  }\n};\nAuthenticationComponent = __decorate([Component({\n  selector: 'app-authentication',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})], AuthenticationComponent);\nexport { AuthenticationComponent };","map":{"version":3,"names":["Component","FormsModule","CommonModule","getAuth","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","initializeApp","getDatabase","ref","set","onValue","environment","AuthenticationComponent","constructor","auth","firebaseConfig","email","password","message","user","users","chatMessage","messages","selectedUser","ngOnInit","monitorAuthState","fetchUsers","createAccount","_this","_asyncToGenerator","userCredential","db","uid","console","log","error","loginEmailPassword","_this2","logout","_this3","usersRef","snapshot","data","val","Object","values","filter","selectUser","userId","find","fetchMessages","sendMessage","receiverId","trim","chatRef","sender","receiver","timestamp","Date","now","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/angular/src/app/modules/side-panel/components/authentication/authentication.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { getAuth, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\nimport { environment } from '../../enviroment';\n\n@Component({\n  selector: 'app-authentication',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss'],\n})\nexport class AuthenticationComponent implements OnInit {\n  private auth = getAuth(initializeApp(environment.firebaseConfig));\n  email: string = '';\n  password: string = '';\n  message: string = '';\n  user: any = null;\n  users: any[] = [];\n  chatMessage: string = '';\n  messages: any[] = [];\n  selectedUser: any = null;\n\n  ngOnInit() {\n    this.monitorAuthState();\n    this.fetchUsers();\n  }\n\n  async createAccount() {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(this.auth, this.email, this.password);\n      this.user = userCredential.user;\n\n      // Save user data to Firebase\n      const db = getDatabase();\n      await set(ref(db, `users/${this.user.uid}`), {\n        email: this.user.email,\n        uid: this.user.uid,\n      });\n\n      console.log(`User saved: ${this.user.email}`); // Debugging log\n      this.message = `Account created for ${this.user.email}!`;\n    } catch (error: any) {\n      console.error('Sign-Up Error:', error.message);\n      this.message = `Sign-Up Error: ${error.message}`;\n    }\n  }\n\n  async loginEmailPassword() {\n    try {\n      const userCredential = await signInWithEmailAndPassword(this.auth, this.email, this.password);\n      this.user = userCredential.user;\n      this.message = `Welcome, ${this.user.email}!`;\n    } catch (error: any) {\n      console.error('Login Error:', error.message);\n      this.message = `Login Error: ${error.message}`;\n    }\n  }\n\n  async logout() {\n    try {\n      await signOut(this.auth);\n      this.user = null;\n      this.message = 'Signed out successfully.';\n    } catch (error: any) {\n      console.error('Sign-Out Error:', error.message);\n      this.message = `Sign-Out Error: ${error.message}`;\n    }\n  }\n\n  monitorAuthState() {\n    onAuthStateChanged(this.auth, (user) => {\n      if (user) {\n        this.user = user;\n        this.message = `Welcome, ${user.email || 'User'}!`;\n      } else {\n        this.user = null;\n        this.message = 'You are not logged in.';\n      }\n    });\n  }\n\n  fetchUsers() {\n    const db = getDatabase();\n    const usersRef = ref(db, 'users');\n\n    onValue(usersRef, (snapshot) => {\n      const data = snapshot.val();\n      console.log('Fetched users:', data); // Debugging log\n      if (data) {\n        this.users = Object.values(data).filter((user: any) => user.uid !== this.user?.uid);\n      } else {\n        this.users = [];\n        console.log('No users found in Firebase.');\n      }\n    });\n  }\n\n  selectUser(userId: string) {\n    this.selectedUser = this.users.find((user) => user.uid === userId);\n    this.fetchMessages(userId);\n  }\n\n  sendMessage(receiverId: string, message: string) {\n    if (!message.trim()) return;\n\n    const db = getDatabase();\n    const chatRef = ref(db, `chats/${this.user.uid}_${receiverId}`);\n\n    set(chatRef, {\n      sender: this.user.uid,\n      receiver: receiverId,\n      message,\n      timestamp: Date.now(),\n    });\n\n    this.chatMessage = ''; // Clear the message input\n  }\n\n  fetchMessages(receiverId: string) {\n    const db = getDatabase();\n    const chatRef = ref(db, `chats/${this.user.uid}_${receiverId}`);\n\n    onValue(chatRef, (snapshot) => {\n      const data = snapshot.val();\n      this.messages = data ? Object.values(data) : [];\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}