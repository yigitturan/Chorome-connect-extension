{"ast":null,"code":"import _asyncToGenerator from \"/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { collection, query, onSnapshot, orderBy, addDoc, Timestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"scrollContainer\"];\nfunction ChatScreenComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"span\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"strong\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, message_r2.createdAt.toDate(), \"shortTime\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", message_r2.id, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.text);\n  }\n}\nexport class ChatScreenComponent {\n  constructor() {\n    this.messages = [];\n    this.newMessage = '';\n    this.fetchMessages();\n  }\n  fetchMessages() {\n    const messagesQuery = query(collection(db, 'messages'), orderBy('createdAt', 'asc'));\n    onSnapshot(messagesQuery, snapshot => {\n      this.messages = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      this.scrollToBottom(); // Scroll to the bottom when new messages arrive\n    }, error => {\n      console.error('Error fetching messages:', error);\n    });\n  }\n  sendMessage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const messageText = _this.newMessage.trim();\n      if (!messageText) return;\n      try {\n        yield addDoc(collection(db, 'messages'), {\n          text: messageText,\n          createdAt: Timestamp.fromDate(new Date())\n        });\n        _this.newMessage = ''; // Clear input field\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    })();\n  }\n  scrollToBottom() {\n    if (this.scrollContainer) {\n      setTimeout(() => {\n        this.scrollContainer.nativeElement.scrollTop = this.scrollContainer.nativeElement.scrollHeight;\n      }, 0);\n    }\n  }\n  ngAfterViewInit() {\n    this.scrollToBottom(); // Ensure scroll is set to the bottom when the view is initialized\n  }\n  static {\n    this.ɵfac = function ChatScreenComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChatScreenComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatScreenComponent,\n      selectors: [[\"app-chat-screen\"]],\n      viewQuery: function ChatScreenComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollContainer = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 2,\n      consts: [[\"scrollContainer\", \"\"], [1, \"chat-container\"], [1, \"messages\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-container\"], [\"type\", \"text\", \"placeholder\", \"Type a message...\", 3, \"ngModelChange\", \"keyup.enter\", \"ngModel\"], [3, \"click\"], [1, \"message\"], [1, \"timestamp\"], [1, \"username\"], [1, \"text\"]],\n      template: function ChatScreenComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2, 0);\n          i0.ɵɵtemplate(3, ChatScreenComponent_div_3_Template, 8, 6, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatScreenComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage, $event) || (ctx.newMessage = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"keyup.enter\", function ChatScreenComponent_Template_input_keyup_enter_5_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function ChatScreenComponent_Template_button_click_6_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.sendMessage());\n          });\n          i0.ɵɵtext(7, \"Send\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.DatePipe, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      styles: [\".chat-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%; \\n\\n  background-color: #ffffff;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.messages[_ngcontent-%COMP%] {\\n  flex: 1; \\n\\n  overflow-y: auto; \\n\\n  padding: 10px;\\n  background-color: #f8f9fa;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  padding: 8px;\\n  background-color: #e9f5ff;\\n  border-radius: 5px;\\n  border: 1px solid #ddd;\\n}\\n.message[_ngcontent-%COMP%]   .timestamp[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  color: #666;\\n  margin-right: 5px;\\n}\\n.message[_ngcontent-%COMP%]   .username[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  margin-right: 5px;\\n}\\n.message[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%] {\\n  word-wrap: break-word;\\n}\\n\\n.input-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  padding: 10px;\\n  border-top: 1px solid #ddd;\\n  background-color: #f4f4f9;\\n}\\n.input-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n}\\n.input-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 15px;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  font-size: 14px;\\n}\\n.input-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FuZ3VsYXIvc3JjL2FwcC9tb2R1bGVzL3NpZGUtcGFuZWwvY2hhdC1zZXJ2aWNlL2NoYXQtc2NyZWVuLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQSxFQUFBLHVDQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0Esd0NBQUE7QUFDRjs7QUFFQTtFQUNFLE9BQUEsRUFBQSxnQ0FBQTtFQUNBLGdCQUFBLEVBQUEscUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7QUFDRjs7QUFFQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtBQUNGO0FBQ0U7RUFDRSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0FBQ0o7QUFFRTtFQUNFLGlCQUFBO0VBQ0EsaUJBQUE7QUFBSjtBQUdFO0VBQ0UscUJBQUE7QUFESjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLDBCQUFBO0VBQ0EseUJBQUE7QUFGRjtBQUlFO0VBQ0UsT0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUZKO0FBS0U7RUFDRSxrQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FBSEo7QUFLSTtFQUNFLHlCQUFBO0FBSE4iLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0IGZvciB0aGUgY2hhdCBjb250YWluZXIgKi9cbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4ubWVzc2FnZXMge1xuICBmbGV4OiAxOyAvKiBUYWtlIHVwIGFsbCByZW1haW5pbmcgc3BhY2UgKi9cbiAgb3ZlcmZsb3cteTogYXV0bzsgLyogRW5hYmxlIHNjcm9sbGluZyAqL1xuICBwYWRkaW5nOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xufVxuXG4ubWVzc2FnZSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIHBhZGRpbmc6IDhweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZjVmZjtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuXG4gIC50aW1lc3RhbXAge1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjb2xvcjogIzY2NjtcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgfVxuXG4gIC51c2VybmFtZSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gIH1cblxuICAudGV4dCB7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICB9XG59XG5cbi5pbnB1dC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDEwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZGRkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY5O1xuXG4gIGlucHV0IHtcbiAgICBmbGV4OiAxO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICB9XG5cbiAgYnV0dG9uIHtcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xuICAgIH1cbiAgfVxufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","collection","query","onSnapshot","orderBy","addDoc","Timestamp","db","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","message_r2","createdAt","toDate","ɵɵtextInterpolate1","id","text","ChatScreenComponent","constructor","messages","newMessage","fetchMessages","messagesQuery","snapshot","docs","map","doc","data","scrollToBottom","error","console","sendMessage","_this","_asyncToGenerator","messageText","trim","fromDate","Date","scrollContainer","setTimeout","nativeElement","scrollTop","scrollHeight","ngAfterViewInit","selectors","viewQuery","ChatScreenComponent_Query","rf","ctx","ɵɵtemplate","ChatScreenComponent_div_3_Template","ɵɵtwoWayListener","ChatScreenComponent_Template_input_ngModelChange_5_listener","$event","ɵɵrestoreView","_r1","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","ChatScreenComponent_Template_input_keyup_enter_5_listener","ChatScreenComponent_Template_button_click_6_listener","ɵɵproperty","ɵɵtwoWayProperty","i1","NgForOf","DatePipe","i2","DefaultValueAccessor","NgControlStatus","NgModel","styles"],"sources":["/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/angular/src/app/modules/side-panel/chat-service/chat-screen.component.ts","/Users/enginturan/Desktop/tuesday/Chorome-connect-extension/angular/src/app/modules/side-panel/chat-service/chat-screen.component.html"],"sourcesContent":["import { Component, AfterViewInit, ElementRef, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { collection, query, onSnapshot, orderBy, addDoc, Timestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\n\ninterface Message {\n  id?: string;\n  text: string;\n  createdAt: Timestamp;\n}\n\n@Component({\n  selector: 'app-chat-screen',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './chat-screen.component.html',\n  styleUrls: ['./chat-screen.component.scss'],\n})\nexport class ChatScreenComponent implements AfterViewInit {\n  @ViewChild('scrollContainer') private scrollContainer!: ElementRef;\n\n  messages: Message[] = [];\n  newMessage = '';\n\n  constructor() {\n    this.fetchMessages();\n  }\n\n  fetchMessages() {\n    const messagesQuery = query(collection(db, 'messages'), orderBy('createdAt', 'asc'));\n    onSnapshot(\n      messagesQuery,\n      (snapshot) => {\n        this.messages = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        })) as Message[];\n        this.scrollToBottom(); // Scroll to the bottom when new messages arrive\n      },\n      (error) => {\n        console.error('Error fetching messages:', error);\n      }\n    );\n  }\n\n  async sendMessage() {\n    const messageText = this.newMessage.trim();\n    if (!messageText) return;\n\n    try {\n      await addDoc(collection(db, 'messages'), {\n        text: messageText,\n        createdAt: Timestamp.fromDate(new Date()),\n      });\n      this.newMessage = ''; // Clear input field\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }\n\n  scrollToBottom() {\n    if (this.scrollContainer) {\n      setTimeout(() => {\n        this.scrollContainer.nativeElement.scrollTop =\n          this.scrollContainer.nativeElement.scrollHeight;\n      }, 0);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.scrollToBottom(); // Ensure scroll is set to the bottom when the view is initialized\n  }\n}\n","<div class=\"chat-container\">\n  <!-- Scrollable chat messages box -->\n  <div class=\"messages\" #scrollContainer>\n    <div *ngFor=\"let message of messages\" class=\"message\">\n      <span class=\"timestamp\">{{ message.createdAt.toDate() | date: 'shortTime' }}</span>\n      <strong class=\"username\">{{ message.id }}:</strong>\n      <span class=\"text\">{{ message.text }}</span>\n    </div>\n  </div>\n\n  <!-- Fixed input box -->\n  <div class=\"input-container\">\n    <input\n      type=\"text\"\n      placeholder=\"Type a message...\"\n      [(ngModel)]=\"newMessage\"\n      (keyup.enter)=\"sendMessage()\"\n    />\n    <button (click)=\"sendMessage()\">Send</button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}